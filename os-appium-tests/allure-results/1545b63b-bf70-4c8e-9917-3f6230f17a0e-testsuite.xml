<?xml version='1.0'?>
<ns2:test-suite xmlns:ns2='urn:model.allure.qatools.yandex.ru' start='1575284720465' stop='1575285080497'>
    <name>[TestSuite, Description("Add an URL and open it with right behaviour")]</name>
    <title>[TestSuite, Description("Add an URL and open it with right behaviour")]</title>
    <test-cases>
        <test-case start='1575284810471' status='failed' stop='1575285080494'>
            <name>[Test, Description("Open valid url  https with locator:  LOCATORS.HTTPS_VALID_URL ),  Priority="P0"]</name>
            <title>[Test, Description("Open valid url  https with locator:  LOCATORS.HTTPS_VALID_URL ),  Priority="P0"]</title>
            <labels>
                <label name='language' value='javascript'/>
                <label name='framework' value='wdio'/>
                <label name='thread' value='0-0'/>
            </labels>
            <parameters>
                <parameter kind='argument' name='device' value='iPhone 11 Pro'/>
            </parameters>
            <steps>
                <step start='1575284810473' status='failed' stop='1575285080494'>
                    <name>GET /session/:sessionId/contexts</name>
                    <title>GET /session/:sessionId/contexts</title>
                    <attachments/>
                    <steps>
                        <step start='1575284900479' status='failed' stop='1575285080494'>
                            <name>POST /session/:sessionId/element</name>
                            <title>POST /session/:sessionId/element</title>
                            <attachments>
                                <attachment title='Request' source='34ca9551-6724-410f-a0f9-f5ad6eab8fa7-attachment.json' type='application/json' size='398'/>
                            </attachments>
                            <steps>
                                <step start='1575284990491' status='failed' stop='1575285080494'>
                                    <name>GET /session/:sessionId/screenshot</name>
                                    <title>GET /session/:sessionId/screenshot</title>
                                    <attachments/>
                                    <steps/>
                                </step>
                            </steps>
                        </step>
                    </steps>
                </step>
            </steps>
            <attachments/>
            <failure>
                <message>Error: Timeout - Async callback was not invoked within 90000ms (set by jasmine.DEFAULT_TIMEOUT_INTERVAL)</message>
                <stack-trace>Error: Timeout - Async callback was not invoked within 90000ms (set by jasmine.DEFAULT_TIMEOUT_INTERVAL)
                    at &lt;Jasmine>
                    at listOnTimeout (internal/timers.js:535:17)
                    at processTimers (internal/timers.js:479:7)</stack-trace>
            </failure>
        </test-case>
        <test-case start='1575285080495' status='pending' stop='1575285080496'>
            <name>function (...hookArgs) {
                // Print errors encountered in beforeHook and afterHook to console, but
                // don't propagate them to avoid failing the test. However, errors in
                // framework hook functions should fail the test, so propagate those.
                return (0, _executeHooksWithArgs.default)(before).catch(hookError('beforeHook')).then(() => {
                  /**
                   * user wants handle async command using promises, no need to wrap in fiber context
                   */
                  if (hookFn.name === 'async') {
                    return executeAsync.call(this, hookFn, repeatTest, (0, _utils.filterSpecArgs)(hookArgs));
                  }
            
                  return new Promise(runSync.call(this, hookFn, repeatTest, (0, _utils.filterSpecArgs)(hookArgs)));
                }).then(() => {
                  return (0, _executeHooksWithArgs.default)(after).catch(hookError('afterHook'));
                });
              }</name>
            <title>function (...hookArgs) {
                // Print errors encountered in beforeHook and afterHook to console, but
                // don't propagate them to avoid failing the test. However, errors in
                // framework hook functions should fail the test, so propagate those.
                return (0, _executeHooksWithArgs.default)(before).catch(hookError('beforeHook')).then(() => {
                  /**
                   * user wants handle async command using promises, no need to wrap in fiber context
                   */
                  if (hookFn.name === 'async') {
                    return executeAsync.call(this, hookFn, repeatTest, (0, _utils.filterSpecArgs)(hookArgs));
                  }
            
                  return new Promise(runSync.call(this, hookFn, repeatTest, (0, _utils.filterSpecArgs)(hookArgs)));
                }).then(() => {
                  return (0, _executeHooksWithArgs.default)(after).catch(hookError('afterHook'));
                });
              }</title>
            <labels>
                <label name='language' value='javascript'/>
                <label name='framework' value='wdio'/>
                <label name='thread' value='0-0'/>
            </labels>
            <parameters>
                <parameter kind='argument' name='device' value='iPhone 11 Pro'/>
            </parameters>
            <steps/>
            <attachments/>
        </test-case>
    </test-cases>
</ns2:test-suite>